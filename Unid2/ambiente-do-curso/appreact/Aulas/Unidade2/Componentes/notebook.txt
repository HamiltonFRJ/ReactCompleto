Componentes
O ideal é dividir o aplicativo em pequenos componentes para facilitar a manutenção do mesmo. Iremos trabalhar durante o curso com os chamados componentes funcionais

import React from 'react';
import Header from './Header';
import Footer from './Footer';

const App = () => {
  return (
    <div>
      <Header />
      <p>Esse é o meu aplicativo</p>
      <Footer />
    </div>
  );
};

export default App;

Interface

Não existe limite para a composição de componentes, eles podem ser desde componentes gerais como Header e Footer, até micro componentees como Input e Button.

*Utilize rafceTAB para a criação rápida do componente*

Form.js

import React from 'react';
import Button from './Button';
import Input from './Input';

const Form = () => {
  return (
    <form>
      <p>
        <label htmlFor="nome">Nome</label>
        <Input />
      </p>
      <p>
        <label htmlFor="email">Email</label>
        <Input />
      </p>
      <Button />
    </form>
  );
};

export default Form;

Return
Um componente deve sempre retornar algo. O retorno pode seer qualquer tipo de  dado aceitado pelo JSX (string, array, um elemento JSX, null, etc).
Não retorna objeto

React.Fragment
Um componente deve sermpre retornar um elemento único no return. Caso vocë deseje retornar mais de um elemento, envolva os mesmos em uma div ou dentro do 
<React.Frament></React.Frament> ou <></>

const App = () => {
  return (
    <React.Fragment>
      <Header />
      <Form />
      <Footer />
    </React.Fragment>
  );
};

É a mesma coisa que 

const App = () => {
  return (
    <>
      <Header />
      <Form />
      <Footer />
    </>
  );
};
